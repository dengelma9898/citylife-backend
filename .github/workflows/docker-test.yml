name: Docker Build Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: dengelma/nuernbergspots-test
  SERVER_HOST: 87.106.208.51
  SERVER_USER: root

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat << EOF > .env
          NODE_ENV=test
          PORT=3000
          # Firebase Konfiguration
          FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY_TEST }}
          FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN_TEST }}
          FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID_TEST }}
          FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET_TEST }}
          FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID_TEST }}
          FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID_TEST }}
          HERE_APP_ID=${{ secrets.HERE_APP_ID }}
          HERE_API_KEY=${{ secrets.HERE_API_KEY }}
          EOF

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_ENV=test
            PORT=3000
          platforms: linux/amd64

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop nuernbergspots-test
            docker rm nuernbergspots-test
            docker pull ${{ env.IMAGE_NAME }}:latest
            docker run -d \
              --name nuernbergspots-test \
              -p 3000:3000 \
              --restart unless-stopped \
              --env-file .env \
              ${{ env.IMAGE_NAME }}:latest
